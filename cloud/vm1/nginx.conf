# File for docker nginx: /etc/nginx/nginx.conf
# via /etc/nginx/nginx.template.conf

worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 768;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;

    # include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    # Forward Elasticsearch traffic
    upstream elasticsearch {
        server ${ES_UPSTREAM};
    }
    server {
        listen ${ES_PORT};
        location / {
            proxy_pass http://elasticsearch;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300;
        }
    }
}

# Stream configuration
stream {
    # Forward Kafka traffic (TCP)
    upstream kafka {
        server ${KAFKA_UPSTREAM};
    }
    server {
        listen ${KAFKA_PORT};
        proxy_pass kafka;
    }

    # Forward Redis traffic (TCP)
    upstream redis {
        server ${REDIS_UPSTREAM};
    }
    server {
        listen ${REDIS_PORT};
        proxy_pass redis;
    }

    # Forward DB traffic (TCP)
    upstream db {
        server ${DB_UPSTREAM};
    }
    server {
        listen ${DB_PORT};
        proxy_pass db;
    }

    # Forward DB direct traffic (TCP)
    upstream db_direct {
        server ${DB_DIRECT_UPSTREAM};
    }
    server {
        listen ${DB_DIRECT_PORT};
        proxy_pass db_direct;
    }
}
